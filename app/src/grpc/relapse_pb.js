/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.relapse_proto.ApplicationInfo', null, global);
goog.exportSymbol('proto.relapse_proto.Capture', null, global);
goog.exportSymbol('proto.relapse_proto.CaptureDaySummary', null, global);
goog.exportSymbol('proto.relapse_proto.DayRequest', null, global);
goog.exportSymbol('proto.relapse_proto.DayResponse', null, global);
goog.exportSymbol('proto.relapse_proto.DaySummaries', null, global);
goog.exportSymbol('proto.relapse_proto.DaySummariesRequest', null, global);
goog.exportSymbol('proto.relapse_proto.ListenRequest', null, global);
goog.exportSymbol('proto.relapse_proto.Settings', null, global);
goog.exportSymbol('proto.relapse_proto.SettingsOptions', null, global);
goog.exportSymbol('proto.relapse_proto.SettingsPlusOptions', null, global);
goog.exportSymbol('proto.relapse_proto.SettingsPlusOptionsRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.Capture = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relapse_proto.Capture, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.Capture.displayName = 'proto.relapse_proto.Capture';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.Capture.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.Capture.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.Capture} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.Capture.toObject = function(includeInstance, msg) {
  var f, obj = {
    captureid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    appname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    apppath: jspb.Message.getFieldWithDefault(msg, 3, ""),
    filepath: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fullpath: jspb.Message.getFieldWithDefault(msg, 5, ""),
    capturetimeseconds: jspb.Message.getFieldWithDefault(msg, 6, 0),
    capturedaytimeseconds: jspb.Message.getFieldWithDefault(msg, 7, 0),
    capturesizebytes: jspb.Message.getFieldWithDefault(msg, 8, 0),
    ispurged: jspb.Message.getFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.Capture}
 */
proto.relapse_proto.Capture.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.Capture;
  return proto.relapse_proto.Capture.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.Capture} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.Capture}
 */
proto.relapse_proto.Capture.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCaptureid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApppath(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilepath(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFullpath(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCapturetimeseconds(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCapturedaytimeseconds(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCapturesizebytes(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspurged(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.Capture.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.Capture.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.Capture} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.Capture.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCaptureid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAppname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApppath();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFilepath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFullpath();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCapturetimeseconds();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getCapturedaytimeseconds();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getCapturesizebytes();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getIspurged();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional int64 CaptureID = 1;
 * @return {number}
 */
proto.relapse_proto.Capture.prototype.getCaptureid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.relapse_proto.Capture.prototype.setCaptureid = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string AppName = 2;
 * @return {string}
 */
proto.relapse_proto.Capture.prototype.getAppname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.relapse_proto.Capture.prototype.setAppname = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string AppPath = 3;
 * @return {string}
 */
proto.relapse_proto.Capture.prototype.getApppath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.relapse_proto.Capture.prototype.setApppath = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Filepath = 4;
 * @return {string}
 */
proto.relapse_proto.Capture.prototype.getFilepath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.relapse_proto.Capture.prototype.setFilepath = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string Fullpath = 5;
 * @return {string}
 */
proto.relapse_proto.Capture.prototype.getFullpath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.relapse_proto.Capture.prototype.setFullpath = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int64 CaptureTimeSeconds = 6;
 * @return {number}
 */
proto.relapse_proto.Capture.prototype.getCapturetimeseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.relapse_proto.Capture.prototype.setCapturetimeseconds = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 CaptureDayTimeSeconds = 7;
 * @return {number}
 */
proto.relapse_proto.Capture.prototype.getCapturedaytimeseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.relapse_proto.Capture.prototype.setCapturedaytimeseconds = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 CaptureSizeBytes = 8;
 * @return {number}
 */
proto.relapse_proto.Capture.prototype.getCapturesizebytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.relapse_proto.Capture.prototype.setCapturesizebytes = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool IsPurged = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.relapse_proto.Capture.prototype.getIspurged = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.relapse_proto.Capture.prototype.setIspurged = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.CaptureDaySummary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relapse_proto.CaptureDaySummary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.CaptureDaySummary.displayName = 'proto.relapse_proto.CaptureDaySummary';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.CaptureDaySummary.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.CaptureDaySummary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.CaptureDaySummary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.CaptureDaySummary.toObject = function(includeInstance, msg) {
  var f, obj = {
    capturedaytimeseconds: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalcapturedtimeseconds: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalcapturesforday: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalcapturesizebytes: jspb.Message.getFieldWithDefault(msg, 4, 0),
    ispurged: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.CaptureDaySummary}
 */
proto.relapse_proto.CaptureDaySummary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.CaptureDaySummary;
  return proto.relapse_proto.CaptureDaySummary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.CaptureDaySummary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.CaptureDaySummary}
 */
proto.relapse_proto.CaptureDaySummary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCapturedaytimeseconds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalcapturedtimeseconds(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalcapturesforday(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalcapturesizebytes(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspurged(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.CaptureDaySummary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.CaptureDaySummary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.CaptureDaySummary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.CaptureDaySummary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCapturedaytimeseconds();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTotalcapturedtimeseconds();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getTotalcapturesforday();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getTotalcapturesizebytes();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getIspurged();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional int64 CaptureDayTimeSeconds = 1;
 * @return {number}
 */
proto.relapse_proto.CaptureDaySummary.prototype.getCapturedaytimeseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.relapse_proto.CaptureDaySummary.prototype.setCapturedaytimeseconds = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 TotalCapturedTimeSeconds = 2;
 * @return {number}
 */
proto.relapse_proto.CaptureDaySummary.prototype.getTotalcapturedtimeseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.relapse_proto.CaptureDaySummary.prototype.setTotalcapturedtimeseconds = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 TotalCapturesForDay = 3;
 * @return {number}
 */
proto.relapse_proto.CaptureDaySummary.prototype.getTotalcapturesforday = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.relapse_proto.CaptureDaySummary.prototype.setTotalcapturesforday = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 TotalCaptureSizeBytes = 4;
 * @return {number}
 */
proto.relapse_proto.CaptureDaySummary.prototype.getTotalcapturesizebytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.relapse_proto.CaptureDaySummary.prototype.setTotalcapturesizebytes = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool IsPurged = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.relapse_proto.CaptureDaySummary.prototype.getIspurged = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.relapse_proto.CaptureDaySummary.prototype.setIspurged = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.DayRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relapse_proto.DayRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.DayRequest.displayName = 'proto.relapse_proto.DayRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.DayRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.DayRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.DayRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.DayRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    capturedaytimeseconds: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.DayRequest}
 */
proto.relapse_proto.DayRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.DayRequest;
  return proto.relapse_proto.DayRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.DayRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.DayRequest}
 */
proto.relapse_proto.DayRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCapturedaytimeseconds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.DayRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.DayRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.DayRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.DayRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCapturedaytimeseconds();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 CaptureDayTimeSeconds = 1;
 * @return {number}
 */
proto.relapse_proto.DayRequest.prototype.getCapturedaytimeseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.relapse_proto.DayRequest.prototype.setCapturedaytimeseconds = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.DayResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.relapse_proto.DayResponse.repeatedFields_, null);
};
goog.inherits(proto.relapse_proto.DayResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.DayResponse.displayName = 'proto.relapse_proto.DayResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.relapse_proto.DayResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.DayResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.DayResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.DayResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.DayResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    capturedaytimeseconds: jspb.Message.getFieldWithDefault(msg, 1, 0),
    capturesList: jspb.Message.toObjectList(msg.getCapturesList(),
    proto.relapse_proto.Capture.toObject, includeInstance),
    summary: (f = msg.getSummary()) && proto.relapse_proto.CaptureDaySummary.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.DayResponse}
 */
proto.relapse_proto.DayResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.DayResponse;
  return proto.relapse_proto.DayResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.DayResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.DayResponse}
 */
proto.relapse_proto.DayResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCapturedaytimeseconds(value);
      break;
    case 2:
      var value = new proto.relapse_proto.Capture;
      reader.readMessage(value,proto.relapse_proto.Capture.deserializeBinaryFromReader);
      msg.addCaptures(value);
      break;
    case 3:
      var value = new proto.relapse_proto.CaptureDaySummary;
      reader.readMessage(value,proto.relapse_proto.CaptureDaySummary.deserializeBinaryFromReader);
      msg.setSummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.DayResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.DayResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.DayResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.DayResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCapturedaytimeseconds();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCapturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.relapse_proto.Capture.serializeBinaryToWriter
    );
  }
  f = message.getSummary();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.relapse_proto.CaptureDaySummary.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 CaptureDayTimeSeconds = 1;
 * @return {number}
 */
proto.relapse_proto.DayResponse.prototype.getCapturedaytimeseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.relapse_proto.DayResponse.prototype.setCapturedaytimeseconds = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Capture Captures = 2;
 * @return {!Array<!proto.relapse_proto.Capture>}
 */
proto.relapse_proto.DayResponse.prototype.getCapturesList = function() {
  return /** @type{!Array<!proto.relapse_proto.Capture>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.relapse_proto.Capture, 2));
};


/** @param {!Array<!proto.relapse_proto.Capture>} value */
proto.relapse_proto.DayResponse.prototype.setCapturesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.relapse_proto.Capture=} opt_value
 * @param {number=} opt_index
 * @return {!proto.relapse_proto.Capture}
 */
proto.relapse_proto.DayResponse.prototype.addCaptures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.relapse_proto.Capture, opt_index);
};


proto.relapse_proto.DayResponse.prototype.clearCapturesList = function() {
  this.setCapturesList([]);
};


/**
 * optional CaptureDaySummary summary = 3;
 * @return {?proto.relapse_proto.CaptureDaySummary}
 */
proto.relapse_proto.DayResponse.prototype.getSummary = function() {
  return /** @type{?proto.relapse_proto.CaptureDaySummary} */ (
    jspb.Message.getWrapperField(this, proto.relapse_proto.CaptureDaySummary, 3));
};


/** @param {?proto.relapse_proto.CaptureDaySummary|undefined} value */
proto.relapse_proto.DayResponse.prototype.setSummary = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.relapse_proto.DayResponse.prototype.clearSummary = function() {
  this.setSummary(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relapse_proto.DayResponse.prototype.hasSummary = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.Settings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.relapse_proto.Settings.repeatedFields_, null);
};
goog.inherits(proto.relapse_proto.Settings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.Settings.displayName = 'proto.relapse_proto.Settings';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.relapse_proto.Settings.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.Settings.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.Settings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.Settings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.Settings.toObject = function(includeInstance, msg) {
  var f, obj = {
    isenabled: jspb.Message.getFieldWithDefault(msg, 1, false),
    rejectionsList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.Settings}
 */
proto.relapse_proto.Settings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.Settings;
  return proto.relapse_proto.Settings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.Settings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.Settings}
 */
proto.relapse_proto.Settings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsenabled(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRejections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.Settings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.Settings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.Settings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.Settings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsenabled();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getRejectionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional bool IsEnabled = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.relapse_proto.Settings.prototype.getIsenabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.relapse_proto.Settings.prototype.setIsenabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * repeated string Rejections = 2;
 * @return {!Array<string>}
 */
proto.relapse_proto.Settings.prototype.getRejectionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.relapse_proto.Settings.prototype.setRejectionsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.relapse_proto.Settings.prototype.addRejections = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.relapse_proto.Settings.prototype.clearRejectionsList = function() {
  this.setRejectionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.SettingsOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.relapse_proto.SettingsOptions.repeatedFields_, null);
};
goog.inherits(proto.relapse_proto.SettingsOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.SettingsOptions.displayName = 'proto.relapse_proto.SettingsOptions';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.relapse_proto.SettingsOptions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.SettingsOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.SettingsOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.SettingsOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.SettingsOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    capturedapplicationsList: jspb.Message.toObjectList(msg.getCapturedapplicationsList(),
    proto.relapse_proto.ApplicationInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.SettingsOptions}
 */
proto.relapse_proto.SettingsOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.SettingsOptions;
  return proto.relapse_proto.SettingsOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.SettingsOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.SettingsOptions}
 */
proto.relapse_proto.SettingsOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.relapse_proto.ApplicationInfo;
      reader.readMessage(value,proto.relapse_proto.ApplicationInfo.deserializeBinaryFromReader);
      msg.addCapturedapplications(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.SettingsOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.SettingsOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.SettingsOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.SettingsOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCapturedapplicationsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.relapse_proto.ApplicationInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ApplicationInfo CapturedApplications = 1;
 * @return {!Array<!proto.relapse_proto.ApplicationInfo>}
 */
proto.relapse_proto.SettingsOptions.prototype.getCapturedapplicationsList = function() {
  return /** @type{!Array<!proto.relapse_proto.ApplicationInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.relapse_proto.ApplicationInfo, 1));
};


/** @param {!Array<!proto.relapse_proto.ApplicationInfo>} value */
proto.relapse_proto.SettingsOptions.prototype.setCapturedapplicationsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.relapse_proto.ApplicationInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.relapse_proto.ApplicationInfo}
 */
proto.relapse_proto.SettingsOptions.prototype.addCapturedapplications = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.relapse_proto.ApplicationInfo, opt_index);
};


proto.relapse_proto.SettingsOptions.prototype.clearCapturedapplicationsList = function() {
  this.setCapturedapplicationsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.ApplicationInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relapse_proto.ApplicationInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.ApplicationInfo.displayName = 'proto.relapse_proto.ApplicationInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.ApplicationInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.ApplicationInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.ApplicationInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.ApplicationInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    appname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    apppath: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.ApplicationInfo}
 */
proto.relapse_proto.ApplicationInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.ApplicationInfo;
  return proto.relapse_proto.ApplicationInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.ApplicationInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.ApplicationInfo}
 */
proto.relapse_proto.ApplicationInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApppath(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.ApplicationInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.ApplicationInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.ApplicationInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.ApplicationInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAppname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApppath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string AppName = 1;
 * @return {string}
 */
proto.relapse_proto.ApplicationInfo.prototype.getAppname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.relapse_proto.ApplicationInfo.prototype.setAppname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string AppPath = 2;
 * @return {string}
 */
proto.relapse_proto.ApplicationInfo.prototype.getApppath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.relapse_proto.ApplicationInfo.prototype.setApppath = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.DaySummariesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relapse_proto.DaySummariesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.DaySummariesRequest.displayName = 'proto.relapse_proto.DaySummariesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.DaySummariesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.DaySummariesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.DaySummariesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.DaySummariesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.DaySummariesRequest}
 */
proto.relapse_proto.DaySummariesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.DaySummariesRequest;
  return proto.relapse_proto.DaySummariesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.DaySummariesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.DaySummariesRequest}
 */
proto.relapse_proto.DaySummariesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.DaySummariesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.DaySummariesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.DaySummariesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.DaySummariesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.DaySummaries = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.relapse_proto.DaySummaries.repeatedFields_, null);
};
goog.inherits(proto.relapse_proto.DaySummaries, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.DaySummaries.displayName = 'proto.relapse_proto.DaySummaries';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.relapse_proto.DaySummaries.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.DaySummaries.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.DaySummaries.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.DaySummaries} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.DaySummaries.toObject = function(includeInstance, msg) {
  var f, obj = {
    daysummariesList: jspb.Message.toObjectList(msg.getDaysummariesList(),
    proto.relapse_proto.CaptureDaySummary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.DaySummaries}
 */
proto.relapse_proto.DaySummaries.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.DaySummaries;
  return proto.relapse_proto.DaySummaries.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.DaySummaries} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.DaySummaries}
 */
proto.relapse_proto.DaySummaries.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.relapse_proto.CaptureDaySummary;
      reader.readMessage(value,proto.relapse_proto.CaptureDaySummary.deserializeBinaryFromReader);
      msg.addDaysummaries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.DaySummaries.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.DaySummaries.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.DaySummaries} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.DaySummaries.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDaysummariesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.relapse_proto.CaptureDaySummary.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CaptureDaySummary DaySummaries = 1;
 * @return {!Array<!proto.relapse_proto.CaptureDaySummary>}
 */
proto.relapse_proto.DaySummaries.prototype.getDaysummariesList = function() {
  return /** @type{!Array<!proto.relapse_proto.CaptureDaySummary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.relapse_proto.CaptureDaySummary, 1));
};


/** @param {!Array<!proto.relapse_proto.CaptureDaySummary>} value */
proto.relapse_proto.DaySummaries.prototype.setDaysummariesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.relapse_proto.CaptureDaySummary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.relapse_proto.CaptureDaySummary}
 */
proto.relapse_proto.DaySummaries.prototype.addDaysummaries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.relapse_proto.CaptureDaySummary, opt_index);
};


proto.relapse_proto.DaySummaries.prototype.clearDaysummariesList = function() {
  this.setDaysummariesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.SettingsPlusOptionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relapse_proto.SettingsPlusOptionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.SettingsPlusOptionsRequest.displayName = 'proto.relapse_proto.SettingsPlusOptionsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.SettingsPlusOptionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.SettingsPlusOptionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.SettingsPlusOptionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.SettingsPlusOptionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.SettingsPlusOptionsRequest}
 */
proto.relapse_proto.SettingsPlusOptionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.SettingsPlusOptionsRequest;
  return proto.relapse_proto.SettingsPlusOptionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.SettingsPlusOptionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.SettingsPlusOptionsRequest}
 */
proto.relapse_proto.SettingsPlusOptionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.SettingsPlusOptionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.SettingsPlusOptionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.SettingsPlusOptionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.SettingsPlusOptionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.SettingsPlusOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relapse_proto.SettingsPlusOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.SettingsPlusOptions.displayName = 'proto.relapse_proto.SettingsPlusOptions';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.SettingsPlusOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.SettingsPlusOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.SettingsPlusOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.SettingsPlusOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    settings: (f = msg.getSettings()) && proto.relapse_proto.Settings.toObject(includeInstance, f),
    settingsoptions: (f = msg.getSettingsoptions()) && proto.relapse_proto.SettingsOptions.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.SettingsPlusOptions}
 */
proto.relapse_proto.SettingsPlusOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.SettingsPlusOptions;
  return proto.relapse_proto.SettingsPlusOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.SettingsPlusOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.SettingsPlusOptions}
 */
proto.relapse_proto.SettingsPlusOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.relapse_proto.Settings;
      reader.readMessage(value,proto.relapse_proto.Settings.deserializeBinaryFromReader);
      msg.setSettings(value);
      break;
    case 2:
      var value = new proto.relapse_proto.SettingsOptions;
      reader.readMessage(value,proto.relapse_proto.SettingsOptions.deserializeBinaryFromReader);
      msg.setSettingsoptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.SettingsPlusOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.SettingsPlusOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.SettingsPlusOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.SettingsPlusOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSettings();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.relapse_proto.Settings.serializeBinaryToWriter
    );
  }
  f = message.getSettingsoptions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.relapse_proto.SettingsOptions.serializeBinaryToWriter
    );
  }
};


/**
 * optional Settings Settings = 1;
 * @return {?proto.relapse_proto.Settings}
 */
proto.relapse_proto.SettingsPlusOptions.prototype.getSettings = function() {
  return /** @type{?proto.relapse_proto.Settings} */ (
    jspb.Message.getWrapperField(this, proto.relapse_proto.Settings, 1));
};


/** @param {?proto.relapse_proto.Settings|undefined} value */
proto.relapse_proto.SettingsPlusOptions.prototype.setSettings = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.relapse_proto.SettingsPlusOptions.prototype.clearSettings = function() {
  this.setSettings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relapse_proto.SettingsPlusOptions.prototype.hasSettings = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SettingsOptions SettingsOptions = 2;
 * @return {?proto.relapse_proto.SettingsOptions}
 */
proto.relapse_proto.SettingsPlusOptions.prototype.getSettingsoptions = function() {
  return /** @type{?proto.relapse_proto.SettingsOptions} */ (
    jspb.Message.getWrapperField(this, proto.relapse_proto.SettingsOptions, 2));
};


/** @param {?proto.relapse_proto.SettingsOptions|undefined} value */
proto.relapse_proto.SettingsPlusOptions.prototype.setSettingsoptions = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.relapse_proto.SettingsPlusOptions.prototype.clearSettingsoptions = function() {
  this.setSettingsoptions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.relapse_proto.SettingsPlusOptions.prototype.hasSettingsoptions = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.relapse_proto.ListenRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.relapse_proto.ListenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.relapse_proto.ListenRequest.displayName = 'proto.relapse_proto.ListenRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.relapse_proto.ListenRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.relapse_proto.ListenRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.relapse_proto.ListenRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.ListenRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    isperforminginitialcapture: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.relapse_proto.ListenRequest}
 */
proto.relapse_proto.ListenRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.relapse_proto.ListenRequest;
  return proto.relapse_proto.ListenRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.relapse_proto.ListenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.relapse_proto.ListenRequest}
 */
proto.relapse_proto.ListenRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsperforminginitialcapture(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.relapse_proto.ListenRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.relapse_proto.ListenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.relapse_proto.ListenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.relapse_proto.ListenRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsperforminginitialcapture();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool IsPerformingInitialCapture = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.relapse_proto.ListenRequest.prototype.getIsperforminginitialcapture = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.relapse_proto.ListenRequest.prototype.setIsperforminginitialcapture = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.relapse_proto);
