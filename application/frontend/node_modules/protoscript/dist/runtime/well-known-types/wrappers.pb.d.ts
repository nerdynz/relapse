import type { ByteSource, PartialDeep } from "protoscript";
import * as protoscript from "protoscript";
/**
 * Wrapper message for `double`.
 *
 * The JSON representation for `DoubleValue` is JSON number.
 */
export interface DoubleValue {
    /**
     * The double value.
     */
    value: number;
}
/**
 * Wrapper message for `float`.
 *
 * The JSON representation for `FloatValue` is JSON number.
 */
export interface FloatValue {
    /**
     * The float value.
     */
    value: number;
}
/**
 * Wrapper message for `int64`.
 *
 * The JSON representation for `Int64Value` is JSON string.
 */
export interface Int64Value {
    /**
     * The int64 value.
     */
    value: bigint;
}
/**
 * Wrapper message for `uint64`.
 *
 * The JSON representation for `UInt64Value` is JSON string.
 */
export interface UInt64Value {
    /**
     * The uint64 value.
     */
    value: bigint;
}
/**
 * Wrapper message for `int32`.
 *
 * The JSON representation for `Int32Value` is JSON number.
 */
export interface Int32Value {
    /**
     * The int32 value.
     */
    value: number;
}
/**
 * Wrapper message for `uint32`.
 *
 * The JSON representation for `UInt32Value` is JSON number.
 */
export interface UInt32Value {
    /**
     * The uint32 value.
     */
    value: number;
}
/**
 * Wrapper message for `bool`.
 *
 * The JSON representation for `BoolValue` is JSON `true` and `false`.
 */
export interface BoolValue {
    /**
     * The bool value.
     */
    value: boolean;
}
/**
 * Wrapper message for `string`.
 *
 * The JSON representation for `StringValue` is JSON string.
 */
export interface StringValue {
    /**
     * The string value.
     */
    value: string;
}
/**
 * Wrapper message for `bytes`.
 *
 * The JSON representation for `BytesValue` is JSON string.
 */
export interface BytesValue {
    /**
     * The bytes value.
     */
    value: Uint8Array;
}
export declare const DoubleValue: {
    /**
     * Serializes DoubleValue to protobuf.
     */
    encode: (msg: PartialDeep<DoubleValue>) => Uint8Array;
    /**
     * Deserializes DoubleValue from protobuf.
     */
    decode: (bytes: ByteSource) => DoubleValue;
    /**
     * Initializes DoubleValue with all fields set to their default value.
     */
    initialize: (msg?: Partial<DoubleValue>) => DoubleValue;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<DoubleValue>, writer: protoscript.BinaryWriter) => protoscript.BinaryWriter;
    /**
     * @private
     */
    _readMessage: (msg: DoubleValue, reader: protoscript.BinaryReader) => DoubleValue;
};
export declare const FloatValue: {
    /**
     * Serializes FloatValue to protobuf.
     */
    encode: (msg: PartialDeep<FloatValue>) => Uint8Array;
    /**
     * Deserializes FloatValue from protobuf.
     */
    decode: (bytes: ByteSource) => FloatValue;
    /**
     * Initializes FloatValue with all fields set to their default value.
     */
    initialize: (msg?: Partial<FloatValue>) => FloatValue;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<FloatValue>, writer: protoscript.BinaryWriter) => protoscript.BinaryWriter;
    /**
     * @private
     */
    _readMessage: (msg: FloatValue, reader: protoscript.BinaryReader) => FloatValue;
};
export declare const Int64Value: {
    /**
     * Serializes Int64Value to protobuf.
     */
    encode: (msg: PartialDeep<Int64Value>) => Uint8Array;
    /**
     * Deserializes Int64Value from protobuf.
     */
    decode: (bytes: ByteSource) => Int64Value;
    /**
     * Initializes Int64Value with all fields set to their default value.
     */
    initialize: (msg?: Partial<Int64Value>) => Int64Value;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<Int64Value>, writer: protoscript.BinaryWriter) => protoscript.BinaryWriter;
    /**
     * @private
     */
    _readMessage: (msg: Int64Value, reader: protoscript.BinaryReader) => Int64Value;
};
export declare const UInt64Value: {
    /**
     * Serializes UInt64Value to protobuf.
     */
    encode: (msg: PartialDeep<UInt64Value>) => Uint8Array;
    /**
     * Deserializes UInt64Value from protobuf.
     */
    decode: (bytes: ByteSource) => UInt64Value;
    /**
     * Initializes UInt64Value with all fields set to their default value.
     */
    initialize: (msg?: Partial<UInt64Value>) => UInt64Value;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<UInt64Value>, writer: protoscript.BinaryWriter) => protoscript.BinaryWriter;
    /**
     * @private
     */
    _readMessage: (msg: UInt64Value, reader: protoscript.BinaryReader) => UInt64Value;
};
export declare const Int32Value: {
    /**
     * Serializes Int32Value to protobuf.
     */
    encode: (msg: PartialDeep<Int32Value>) => Uint8Array;
    /**
     * Deserializes Int32Value from protobuf.
     */
    decode: (bytes: ByteSource) => Int32Value;
    /**
     * Initializes Int32Value with all fields set to their default value.
     */
    initialize: (msg?: Partial<Int32Value>) => Int32Value;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<Int32Value>, writer: protoscript.BinaryWriter) => protoscript.BinaryWriter;
    /**
     * @private
     */
    _readMessage: (msg: Int32Value, reader: protoscript.BinaryReader) => Int32Value;
};
export declare const UInt32Value: {
    /**
     * Serializes UInt32Value to protobuf.
     */
    encode: (msg: PartialDeep<UInt32Value>) => Uint8Array;
    /**
     * Deserializes UInt32Value from protobuf.
     */
    decode: (bytes: ByteSource) => UInt32Value;
    /**
     * Initializes UInt32Value with all fields set to their default value.
     */
    initialize: (msg?: Partial<UInt32Value>) => UInt32Value;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<UInt32Value>, writer: protoscript.BinaryWriter) => protoscript.BinaryWriter;
    /**
     * @private
     */
    _readMessage: (msg: UInt32Value, reader: protoscript.BinaryReader) => UInt32Value;
};
export declare const BoolValue: {
    /**
     * Serializes BoolValue to protobuf.
     */
    encode: (msg: PartialDeep<BoolValue>) => Uint8Array;
    /**
     * Deserializes BoolValue from protobuf.
     */
    decode: (bytes: ByteSource) => BoolValue;
    /**
     * Initializes BoolValue with all fields set to their default value.
     */
    initialize: (msg?: Partial<BoolValue>) => BoolValue;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<BoolValue>, writer: protoscript.BinaryWriter) => protoscript.BinaryWriter;
    /**
     * @private
     */
    _readMessage: (msg: BoolValue, reader: protoscript.BinaryReader) => BoolValue;
};
export declare const StringValue: {
    /**
     * Serializes StringValue to protobuf.
     */
    encode: (msg: PartialDeep<StringValue>) => Uint8Array;
    /**
     * Deserializes StringValue from protobuf.
     */
    decode: (bytes: ByteSource) => StringValue;
    /**
     * Initializes StringValue with all fields set to their default value.
     */
    initialize: (msg?: Partial<StringValue>) => StringValue;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<StringValue>, writer: protoscript.BinaryWriter) => protoscript.BinaryWriter;
    /**
     * @private
     */
    _readMessage: (msg: StringValue, reader: protoscript.BinaryReader) => StringValue;
};
export declare const BytesValue: {
    /**
     * Serializes BytesValue to protobuf.
     */
    encode: (msg: PartialDeep<BytesValue>) => Uint8Array;
    /**
     * Deserializes BytesValue from protobuf.
     */
    decode: (bytes: ByteSource) => BytesValue;
    /**
     * Initializes BytesValue with all fields set to their default value.
     */
    initialize: (msg?: Partial<BytesValue>) => BytesValue;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<BytesValue>, writer: protoscript.BinaryWriter) => protoscript.BinaryWriter;
    /**
     * @private
     */
    _readMessage: (msg: BytesValue, reader: protoscript.BinaryReader) => BytesValue;
};
export declare const DoubleValueJSON: {
    /**
     * Serializes DoubleValue to JSON.
     */
    encode: (msg: PartialDeep<DoubleValue>) => string;
    /**
     * Deserializes DoubleValue from JSON.
     */
    decode: (json: string) => DoubleValue;
    /**
     * Initializes DoubleValue with all fields set to their default value.
     */
    initialize: (msg?: Partial<DoubleValue>) => DoubleValue;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<DoubleValue>) => Record<string, unknown>;
    /**
     * @private
     */
    _readMessage: (msg: DoubleValue, json: any) => DoubleValue;
};
export declare const FloatValueJSON: {
    /**
     * Serializes FloatValue to JSON.
     */
    encode: (msg: PartialDeep<FloatValue>) => string;
    /**
     * Deserializes FloatValue from JSON.
     */
    decode: (json: string) => FloatValue;
    /**
     * Initializes FloatValue with all fields set to their default value.
     */
    initialize: (msg?: Partial<FloatValue>) => FloatValue;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<FloatValue>) => Record<string, unknown>;
    /**
     * @private
     */
    _readMessage: (msg: FloatValue, json: any) => FloatValue;
};
export declare const Int64ValueJSON: {
    /**
     * Serializes Int64Value to JSON.
     */
    encode: (msg: PartialDeep<Int64Value>) => string;
    /**
     * Deserializes Int64Value from JSON.
     */
    decode: (json: string) => Int64Value;
    /**
     * Initializes Int64Value with all fields set to their default value.
     */
    initialize: (msg?: Partial<Int64Value>) => Int64Value;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<Int64Value>) => Record<string, unknown>;
    /**
     * @private
     */
    _readMessage: (msg: Int64Value, json: any) => Int64Value;
};
export declare const UInt64ValueJSON: {
    /**
     * Serializes UInt64Value to JSON.
     */
    encode: (msg: PartialDeep<UInt64Value>) => string;
    /**
     * Deserializes UInt64Value from JSON.
     */
    decode: (json: string) => UInt64Value;
    /**
     * Initializes UInt64Value with all fields set to their default value.
     */
    initialize: (msg?: Partial<UInt64Value>) => UInt64Value;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<UInt64Value>) => Record<string, unknown>;
    /**
     * @private
     */
    _readMessage: (msg: UInt64Value, json: any) => UInt64Value;
};
export declare const Int32ValueJSON: {
    /**
     * Serializes Int32Value to JSON.
     */
    encode: (msg: PartialDeep<Int32Value>) => string;
    /**
     * Deserializes Int32Value from JSON.
     */
    decode: (json: string) => Int32Value;
    /**
     * Initializes Int32Value with all fields set to their default value.
     */
    initialize: (msg?: Partial<Int32Value>) => Int32Value;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<Int32Value>) => Record<string, unknown>;
    /**
     * @private
     */
    _readMessage: (msg: Int32Value, json: any) => Int32Value;
};
export declare const UInt32ValueJSON: {
    /**
     * Serializes UInt32Value to JSON.
     */
    encode: (msg: PartialDeep<UInt32Value>) => string;
    /**
     * Deserializes UInt32Value from JSON.
     */
    decode: (json: string) => UInt32Value;
    /**
     * Initializes UInt32Value with all fields set to their default value.
     */
    initialize: (msg?: Partial<UInt32Value>) => UInt32Value;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<UInt32Value>) => Record<string, unknown>;
    /**
     * @private
     */
    _readMessage: (msg: UInt32Value, json: any) => UInt32Value;
};
export declare const BoolValueJSON: {
    /**
     * Serializes BoolValue to JSON.
     */
    encode: (msg: PartialDeep<BoolValue>) => string;
    /**
     * Deserializes BoolValue from JSON.
     */
    decode: (json: string) => BoolValue;
    /**
     * Initializes BoolValue with all fields set to their default value.
     */
    initialize: (msg?: Partial<BoolValue>) => BoolValue;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<BoolValue>) => Record<string, unknown>;
    /**
     * @private
     */
    _readMessage: (msg: BoolValue, json: any) => BoolValue;
};
export declare const StringValueJSON: {
    /**
     * Serializes StringValue to JSON.
     */
    encode: (msg: PartialDeep<StringValue>) => string;
    /**
     * Deserializes StringValue from JSON.
     */
    decode: (json: string) => StringValue;
    /**
     * Initializes StringValue with all fields set to their default value.
     */
    initialize: (msg?: Partial<StringValue>) => StringValue;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<StringValue>) => Record<string, unknown>;
    /**
     * @private
     */
    _readMessage: (msg: StringValue, json: any) => StringValue;
};
export declare const BytesValueJSON: {
    /**
     * Serializes BytesValue to JSON.
     */
    encode: (msg: PartialDeep<BytesValue>) => string;
    /**
     * Deserializes BytesValue from JSON.
     */
    decode: (json: string) => BytesValue;
    /**
     * Initializes BytesValue with all fields set to their default value.
     */
    initialize: (msg?: Partial<BytesValue>) => BytesValue;
    /**
     * @private
     */
    _writeMessage: (msg: PartialDeep<BytesValue>) => Record<string, unknown>;
    /**
     * @private
     */
    _readMessage: (msg: BytesValue, json: any) => BytesValue;
};
