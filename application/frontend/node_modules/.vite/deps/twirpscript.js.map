{
  "version": 3,
  "sources": ["../../twirpscript/dist/runtime/error/index.js", "../../twirpscript/dist/runtime/eventEmitter/index.js", "../../twirpscript/dist/runtime/client/index.js", "../../twirpscript/dist/runtime/server/requestLogging/index.js", "../../twirpscript/dist/runtime/server/index.js", "../../twirpscript/dist/runtime/compatCheck.js"],
  "sourcesContent": ["export class TwirpError {\n    constructor(error) {\n        this.code = error.code;\n        this.msg = error.msg;\n        this.meta = error.meta;\n    }\n}\nclass TwirpIntermediaryError extends TwirpError {\n    constructor(error) {\n        super(error);\n    }\n}\nexport const statusCodeForErrorCode = {\n    canceled: 408,\n    unknown: 500,\n    invalid_argument: 400,\n    malformed: 400,\n    deadline_exceeded: 408,\n    not_found: 404,\n    bad_route: 404,\n    already_exists: 409,\n    permission_denied: 403,\n    unauthenticated: 401,\n    resource_exhausted: 403,\n    failed_precondition: 412,\n    aborted: 409,\n    out_of_range: 400,\n    unimplemented: 501,\n    internal: 500,\n    unavailable: 503,\n    data_loss: 500,\n};\nfunction isTwirpError(error) {\n    if (typeof error === \"object\" && error !== null) {\n        return (\"code\" in error && error.code in statusCodeForErrorCode);\n    }\n    return false;\n}\nfunction errorCodeFromStatusCode(status) {\n    if (300 >= status && status <= 400) {\n        return \"internal\";\n    }\n    const statusError = {\n        401: \"unauthenticated\",\n        403: \"permission_denied\",\n        404: \"bad_route\",\n        429: \"unavailable\",\n        502: \"unavailable\",\n        503: \"unavailable\",\n        504: \"unavailable\",\n    };\n    return statusError[status] ?? \"internal\";\n}\nexport async function twirpErrorFromResponse(res) {\n    const text = await res.text();\n    try {\n        const json = JSON.parse(text);\n        if (isTwirpError(json)) {\n            return new TwirpError(json);\n        }\n        // eslint-disable-next-line no-empty\n    }\n    catch { }\n    return new TwirpIntermediaryError({\n        code: errorCodeFromStatusCode(res.status),\n        msg: \"HTTP Error from Intermediary Proxy\",\n        meta: {\n            http_error_from_intermediary: \"true\",\n            status_code: res.status.toString(),\n            body: text,\n            location: res.headers.get(\"location\") ?? undefined,\n        },\n    });\n}\n", "export function createEventEmitter() {\n    const listeners = {};\n    return {\n        on: (eventName, listener) => {\n            listeners[eventName] ?? (listeners[eventName] = []);\n            listeners[eventName]?.push(listener);\n        },\n        off: (eventName, listener) => {\n            listeners[eventName] = listeners[eventName]?.filter((x) => x !== listener);\n        },\n        emit: (eventName, ...args) => {\n            listeners[eventName]?.forEach((cb) => {\n                cb(...args);\n            });\n        },\n    };\n}\n", "import { TwirpError, twirpErrorFromResponse } from \"../error/index.js\";\nimport { createEventEmitter } from \"../eventEmitter/index.js\";\nconst clientMiddleware = [];\nconst ee = createEventEmitter();\nconst fetchTransport = async (url, opts) => {\n    return fetch(url, opts);\n};\n/**\n * Global configuration for the TwirpScript clients.\n */\nexport const client = {\n    baseURL: \"\",\n    headers: {},\n    prefix: \"/twirp\",\n    use(middleware) {\n        clientMiddleware.push(middleware);\n        return client;\n    },\n    on: (...args) => {\n        ee.on(...args);\n        return client;\n    },\n    off: (...args) => {\n        ee.off(...args);\n        return client;\n    },\n    rpcTransport: fetchTransport,\n};\nasync function runMiddleware(config, request) {\n    // outer scope for error event callback arg\n    let cfg = config;\n    let idx = 1;\n    const middleware = [...clientMiddleware, request];\n    try {\n        return await middleware[0](config, function next(c) {\n            cfg = c;\n            const nxt = middleware[idx];\n            idx++;\n            return nxt(c, next);\n        });\n    }\n    catch (e) {\n        const error = e instanceof TwirpError\n            ? e\n            : new TwirpError({\n                code: \"internal\",\n                msg: \"client error\",\n            });\n        ee.emit(\"error\", cfg, error);\n        throw e;\n    }\n}\nfunction mergeConfig(config = {}, path) {\n    const baseURL = config.baseURL ?? client.baseURL ?? \"\";\n    const prefix = config.prefix ?? client.prefix ?? \"\";\n    const url = baseURL + prefix + path;\n    const rpcTransport = config.rpcTransport ?? client.rpcTransport;\n    return {\n        url,\n        headers: {\n            ...client.headers,\n            ...config.headers,\n        },\n        rpcTransport,\n    };\n}\nasync function makeRequest(contentType, path, body, config) {\n    return runMiddleware(mergeConfig(config, path), async (c) => {\n        ee.emit(\"requestPrepared\", c);\n        const res = await c.rpcTransport(c.url, {\n            method: \"POST\",\n            headers: {\n                accept: contentType,\n                \"content-type\": contentType,\n                ...c.headers,\n            },\n            body,\n        });\n        ee.emit(\"responseReceived\", c);\n        if (!res.ok) {\n            throw await twirpErrorFromResponse(res);\n        }\n        switch (contentType) {\n            case \"application/protobuf\": {\n                const buffer = await res.arrayBuffer();\n                return new Uint8Array(buffer);\n            }\n            case \"application/json\": {\n                return res.text();\n            }\n            default: {\n                const _exhaust = contentType;\n                return _exhaust;\n            }\n        }\n    });\n}\nexport function JSONrequest(path, body, config) {\n    return makeRequest(\"application/json\", path, body, config);\n}\nexport function PBrequest(path, body, config) {\n    return makeRequest(\"application/protobuf\", path, body, config);\n}\n", "export const timingField = \"__twirpRequestStartMs__\";\nexport function withRequestLogging(app) {\n    app.on(\"requestReceived\", (ctx, request) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n        ctx[timingField] = Date.now();\n        console.info(`[TwirpScript] Started ${request.method} \"${request.url}\"`);\n    });\n    app.on(\"requestRouted\", (ctx) => {\n        console.info(\n        // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        `[TwirpScript] Processing by ${ctx.service?.name}#${ctx.method?.name} as ${ctx.contentType}`);\n    });\n    app.on(\"responseSent\", (ctx, response) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n        const time = Date.now() - ctx[timingField];\n        console.info(`[TwirpScript] Completed ${response.statusCode} in ${time} ms.`);\n    });\n    app.on(\"error\", (_ctx, error) => {\n        console.error(\"[TwirpScript] Error:\");\n        console.error(error);\n    });\n    return app;\n}\n", "import { TwirpError, statusCodeForErrorCode } from \"../error/index.js\";\nimport { createEventEmitter } from \"../eventEmitter/index.js\";\nimport { withRequestLogging } from \"./requestLogging/index.js\";\n/**\n * This should never occur.\n *\n * If this error is encountered, please open an issue:\n * https://github.com/tatethurston/TwirpScript/issues/new\n */\nconst TWIRPSCRIPT_INVARIANT = \"TwirpScript Invariant\";\nexport function TwirpErrorResponse(error) {\n    return {\n        statusCode: statusCodeForErrorCode[error.code],\n        headers: {\n            \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(error),\n    };\n}\nexport async function executeServiceMethod(method, req, context, ee) {\n    switch (context.contentType) {\n        case \"JSON\": {\n            let body;\n            try {\n                const utf8 = new TextDecoder().decode(req.body);\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                body = method.input.json.decode(utf8);\n            }\n            catch (e) {\n                throw new TwirpError({\n                    code: \"invalid_argument\",\n                    msg: \"failed to deserialize argument as JSON\",\n                });\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            ee.emit(\"requestRouted\", context, body);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const response = await method.handler(body, context);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            ee.emit(\"responsePrepared\", context, response);\n            return method.output.json.encode(response);\n        }\n        case \"Protobuf\": {\n            let body;\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-non-null-assertion\n                body = method.input.protobuf.decode(req.body);\n            }\n            catch (e) {\n                throw new TwirpError({\n                    code: \"invalid_argument\",\n                    msg: \"failed to deserialize argument as Protobuf\",\n                });\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            ee.emit(\"requestRouted\", context, body);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const response = await method.handler(body, context);\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            ee.emit(\"responsePrepared\", context, response);\n            return method.output.protobuf.encode(response);\n        }\n        // This should never occur because we've processed the content type in\n        // validateRequest\n        // istanbul ignore: invariant\n        case \"Unknown\": {\n            throw new Error(TWIRPSCRIPT_INVARIANT);\n        }\n        // This should never occur because we've processed the content type in\n        // validateRequest\n        // istanbul ignore: invariant\n        default: {\n            const _exhaust = context.contentType;\n            // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n            throw new Error(TWIRPSCRIPT_INVARIANT + _exhaust);\n        }\n    }\n}\nfunction validateRequest(req) {\n    if (!req.url) {\n        return new TwirpError({\n            code: \"malformed\",\n            msg: \"no request url provided\",\n        });\n    }\n    if (!req.method) {\n        return new TwirpError({\n            code: \"malformed\",\n            msg: \"no request method provided\",\n        });\n    }\n    if (req.method !== \"POST\") {\n        return new TwirpError({\n            code: \"malformed\",\n            msg: `unexpected request method ${req.method}`,\n        });\n    }\n    const contentType = req.headers[\"content-type\"];\n    if (!contentType) {\n        return new TwirpError({\n            code: \"malformed\",\n            msg: \"no request content-type provided\",\n        });\n    }\n    if (contentType !== \"application/json\" &&\n        contentType !== \"application/protobuf\") {\n        return new TwirpError({\n            code: \"malformed\",\n            msg: `unexpected request content-type ${contentType}`,\n        });\n    }\n}\nfunction handleError(error, ctx, ee) {\n    ee.emit(\"error\", ctx, error);\n    return TwirpErrorResponse(error);\n}\nfunction handleUserSpaceError(error, ctx, ee) {\n    if (error instanceof TwirpError) {\n        return handleError(error, ctx, ee);\n    }\n    else {\n        ee.emit(\"error\", ctx, new TwirpError({\n            code: \"internal\",\n            msg: \"server error\",\n            // Do expose internal error message in reporting\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n            meta: { error: error },\n        }));\n        // Don't expose internal error message in response\n        return TwirpErrorResponse(new TwirpError({\n            code: \"internal\",\n            msg: \"server error\",\n        }));\n    }\n}\nexport function twirpHandler(ee) {\n    return async (req, ctx) => {\n        const err = validateRequest(req);\n        if (err) {\n            return handleError(err, ctx, ee);\n        }\n        const handler = ctx.method;\n        if (!handler) {\n            return handleError(new TwirpError({\n                code: \"bad_route\",\n                msg: `no handler for path POST ${req.url}.`,\n            }), ctx, ee);\n        }\n        try {\n            const response = await executeServiceMethod(handler, req, ctx, ee);\n            return {\n                statusCode: 200,\n                headers: {\n                    \"content-type\": req.headers[\"content-type\"],\n                },\n                body: response,\n            };\n        }\n        catch (error) {\n            return handleUserSpaceError(error, ctx, ee);\n        }\n    };\n}\nfunction getContentType(contentType) {\n    switch (contentType) {\n        case \"application/json\":\n            return \"JSON\";\n        case \"application/protobuf\":\n            return \"Protobuf\";\n        default:\n            return \"Unknown\";\n    }\n}\nfunction getRequestContext(req, services, config) {\n    const ctx = {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment , @typescript-eslint/no-explicit-any\n        service: undefined,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment , @typescript-eslint/no-explicit-any\n        method: undefined,\n        contentType: getContentType(req.headers[\"content-type\"]),\n    };\n    const prefix = config.prefix + \"/\";\n    const startsWithPrefix = req.url.startsWith(prefix);\n    if (!startsWithPrefix) {\n        return ctx;\n    }\n    const methodIdx = req.url.lastIndexOf(\"/\");\n    const serviceName = req.url.slice(prefix.length, methodIdx);\n    const serviceMethod = req.url.slice(methodIdx + 1);\n    const service = services.find((service) => service.name === serviceName);\n    const handler = service?.methods[serviceMethod];\n    if (handler) {\n        ctx.service = service;\n        ctx.method = handler;\n    }\n    return ctx;\n}\nfunction lowercaseHeaders(headers) {\n    return Object.fromEntries(Object.entries(headers).map(([key, value]) => [key.toLowerCase(), value]));\n}\nexport function createTwirpServerless(services, config = {}) {\n    const configWithDefaults = {\n        debug: true,\n        prefix: \"/twirp\",\n        ...config,\n    };\n    const serverMiddleware = [];\n    const ee = createEventEmitter();\n    const twirp = twirpHandler(ee);\n    async function app(rawRequest) {\n        const req = {\n            ...rawRequest,\n            headers: lowercaseHeaders(rawRequest.headers),\n        };\n        const ctx = getRequestContext(req, services, configWithDefaults);\n        ee.emit(\"requestReceived\", ctx, req);\n        let response;\n        let idx = 1;\n        const middleware = [...serverMiddleware, twirp];\n        try {\n            response = await middleware[0](req, ctx, function next() {\n                const nxt = middleware[idx];\n                idx++;\n                return nxt(req, ctx, next);\n            });\n        }\n        catch (error) {\n            response = handleUserSpaceError(error, ctx, ee);\n        }\n        ee.emit(\"responseSent\", ctx, response);\n        return response;\n    }\n    app.use = (handler) => {\n        serverMiddleware.push(handler);\n        return app;\n    };\n    app.on = (...args) => {\n        ee.on(...args);\n        return app;\n    };\n    app.off = (...args) => {\n        ee.off(...args);\n        return app;\n    };\n    if (configWithDefaults.debug !== false) {\n        withRequestLogging(app);\n    }\n    return app;\n}\nasync function getBody(req) {\n    const buffers = [];\n    for await (const chunk of req) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n        buffers.push(chunk);\n    }\n    const length = buffers.reduce((acc, buffer) => acc + buffer.length, 0);\n    const body = new Uint8Array(length);\n    let offset = 0;\n    buffers.forEach((buffer) => {\n        body.set(buffer, offset);\n        offset += buffer.length;\n    });\n    return body;\n}\nexport function createTwirpServer(services, config = {}) {\n    const _app = createTwirpServerless(services, config);\n    async function app(req, res) {\n        const body = await getBody(req);\n        const request = req;\n        request.body = body;\n        const response = await _app(request);\n        res.writeHead(response.statusCode, response.headers);\n        res.end(response.body);\n    }\n    app.use = (handler) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any , @typescript-eslint/no-unsafe-argument\n        _app.use(handler);\n        return app;\n    };\n    app.on = (...args) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _app.on(...args);\n        return app;\n    };\n    app.off = (...args) => {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        _app.off(...args);\n        return app;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    return app;\n}\n", "export const RUNTIME_MIN_CODE_GEN_SUPPORTED_VERSION = \"MIN_SUPPORTED_VERSION_0_0_56\";\n/**\n * A backwards compatibility check.\n *\n * This is the minimum supported version by the current runtime. If you use code generated by a version of TwirpScript lower than this version, you will encounter a TypeScript error instead of any runtime errors.\n *\n * To resolve, run `npx twirpscript` to regenerate the file.\n */\nexport const MIN_SUPPORTED_VERSION_0_0_56 = RUNTIME_MIN_CODE_GEN_SUPPORTED_VERSION;\n"],
  "mappings": "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",
  "names": ["ee", "service"]
}
