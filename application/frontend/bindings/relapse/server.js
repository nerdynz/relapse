// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as proto$0 from "../github.com/nerdynz/relapse/proto/models.js";

/**
 * @returns {Promise<proto$0.Capture | null> & { cancel(): void }}
 */
export function CaptureScreens() {
    let $resultPromise = /** @type {any} */($Call.ByID(8192814));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType1($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @returns {Promise<proto$0.Settings | null> & { cancel(): void }}
 */
export function CurrentSettings() {
    let $resultPromise = /** @type {any} */($Call.ByID(470938203));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType3($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {proto$0.DeleteCapturesForDayRequest | null} req
 * @returns {Promise<proto$0.DeleteCapturesForDayResponse | null> & { cancel(): void }}
 */
export function DeleteCapturesForDay(req) {
    let $resultPromise = /** @type {any} */($Call.ByID(1065517690, req));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType5($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @returns {Promise<proto$0.SettingsPlusOptions | null> & { cancel(): void }}
 */
export function GetSettings() {
    let $resultPromise = /** @type {any} */($Call.ByID(1883675502));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType7($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {proto$0.DateRequest | null} req
 * @returns {Promise<proto$0.OcrFull | null> & { cancel(): void }}
 */
export function LoadCaptureOcr(req) {
    let $resultPromise = /** @type {any} */($Call.ByID(1710621811, req));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType9($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {proto$0.DateRequest | null} req
 * @returns {Promise<proto$0.CapturedDay | null> & { cancel(): void }}
 */
export function LoadCapturedDay(req) {
    let $resultPromise = /** @type {any} */($Call.ByID(984895139, req));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType11($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {proto$0.DaySummariesRequest | null} req
 * @returns {Promise<proto$0.DaySummaries | null> & { cancel(): void }}
 */
export function LoadDaySummaries(req) {
    let $resultPromise = /** @type {any} */($Call.ByID(2683085427, req));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType13($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * @param {proto$0.Settings | null} settings
 * @returns {Promise<proto$0.Settings | null> & { cancel(): void }}
 */
export function SetSettings(settings) {
    let $resultPromise = /** @type {any} */($Call.ByID(2034067018, settings));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType3($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

// Private type creation functions
const $$createType0 = proto$0.Capture.createFrom;
const $$createType1 = $Create.Nullable($$createType0);
const $$createType2 = proto$0.Settings.createFrom;
const $$createType3 = $Create.Nullable($$createType2);
const $$createType4 = proto$0.DeleteCapturesForDayResponse.createFrom;
const $$createType5 = $Create.Nullable($$createType4);
const $$createType6 = proto$0.SettingsPlusOptions.createFrom;
const $$createType7 = $Create.Nullable($$createType6);
const $$createType8 = proto$0.OcrFull.createFrom;
const $$createType9 = $Create.Nullable($$createType8);
const $$createType10 = proto$0.CapturedDay.createFrom;
const $$createType11 = $Create.Nullable($$createType10);
const $$createType12 = proto$0.DaySummaries.createFrom;
const $$createType13 = $Create.Nullable($$createType12);
